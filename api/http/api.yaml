openapi: 3.0.0
info:
  title: Gophermart REST API
  version: 1.0.0
servers:
  - url: /api
paths:
  /user/register:
    post:
      summary: Register a new user
      description: Registers a new user with the provided login and password. If successful, automatically authenticates the user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: secret123
            examples:
              validRequest:
                value:
                  login: johndoe
                  password: secret123
      responses:
        '200':
          description: Successful registration and authentication
          headers:
            Set-Cookie:
              schema:
                type: string
                example: session_id=abcdefg; Path=/; HttpOnly
        '400':
          description: Invalid request format
        '409':
          description: Login already taken
        '500':
          description: Internal server error
  /user/login:
    post:
      summary: Authenticate an existing user
      description: Authenticates an existing user with the provided login and password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: secret123
            examples:
              validRequest:
                value:
                  login: johndoe
                  password: secret123
      responses:
        '200':
          description: Successful authentication
          headers:
            Set-Cookie:
              schema:
                type: string
                example: session_id=xyz987; Path=/; HttpOnly
        '400':
          description: Invalid request format
        '401':
          description: Invalid credentials
        '500':
          description: Internal server error
  /user/orders:
    post:
      summary: Submit order number for processing
      description: Submits an order number for processing by an authenticated user. The order number is validated using the Luhn algorithm.
      security:
        - bearerAuth: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              pattern: ^\d+$
            examples:
              validOrderNumber:
                value: "12345678903"
      responses:
        '200':
          description: Order number already submitted by this user
        '202':
          description: New order number accepted for processing
        '400':
          description: Invalid request format
        '401':
          description: Unauthenticated user
        '409':
          description: Order number already submitted by another user
        '422':
          description: Invalid order number format
        '500':
          description: Internal server error
    get:
      summary: Get list of submitted orders
      description: Retrieves a list of all orders submitted by the authenticated user sorted by upload time from newest to oldest.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of orders successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '204':
          description: No data available
        '401':
          description: Unauthenticated user
        '500':
          description: Internal server error
  /user/balance:
    get:
      summary: Get current balance
      description: Retrieves the current loyalty points balance and total withdrawn points for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Balance information successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: Unauthenticated user
        '500':
          description: Internal server error
    post:
      summary: Request withdrawal
      description: Requests a withdrawal of loyalty points towards a specified order.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - order
                - sum
              properties:
                order:
                  type: string
                  example: "2377225624"
                sum:
                  type: number
                  format: float
                  example: 751
            examples:
              validWithdrawalRequest:
                value:
                  order: "2377225624"
                  sum: 751
      responses:
        '200':
          description: Withdrawal request processed successfully
        '401':
          description: Unauthenticated user
        '402':
          description: Insufficient funds
        '422':
          description: Invalid order number
        '500':
          description: Internal server error
  /user/withdrawals:
    get:
      summary: Get withdrawal history
      description: Retrieves the history of withdrawals made by the authenticated user sorted by processing time from newest to oldest.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Withdrawal history successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Withdrawal'
        '204':
          description: No withdrawal history found
        '401':
          description: Unauthenticated user
        '500':
          description: Internal server error
components:
  schemas:
    Order:
      type: object
      required:
        - number
        - status
        - uploaded_at
      properties:
        number:
          type: string
          example: "9278923470"
        status:
          type: string
          enum:
            - NEW
            - PROCESSING
            - INVALID
            - PROCESSED
          example: PROCESSED
        accrual:
          type: integer
          example: 500
        uploaded_at:
          type: string
          format: date-time
          example: "2020-12-10T15:15:45+03:00"
    Balance:
      type: object
      required:
        - current
        - withdrawn
      properties:
        current:
          type: number
          format: float
          example: 500.5
        withdrawn:
          type: number
          format: float
          example: 42
    Withdrawal:
      type: object
      required:
        - order
        - sum
        - processed_at
      properties:
        order:
          type: string
          example: "2377225624"
        sum:
          type: number
          format: float
          example: 500
        processed_at:
          type: string
          format: date-time
          example: "2020-12-09T16:09:57+03:00"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT